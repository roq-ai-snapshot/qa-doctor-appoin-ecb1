generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model appointment {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date                   DateTime?           @db.Date
  time                   DateTime?           @db.Time(6)
  status                 String?             @db.VarChar(100)
  user_id                String              @db.Uuid
  healthcare_provider_id String              @db.Uuid
  created_at             DateTime            @default(now()) @db.Timestamp(6)
  updated_at             DateTime            @default(now()) @db.Timestamp(6)
  healthcare_provider    healthcare_provider @relation(fields: [healthcare_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                   user                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model healthcare_provider {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  specialization  String?       @db.VarChar(100)
  qualification   String?       @db.VarChar(100)
  experience      Int?
  user_id         String        @db.Uuid
  organization_id String        @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  appointment     appointment[]
  organization    organization  @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model insurance_provider {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_name    String?      @db.VarChar(100)
  coverage        String?      @db.VarChar(100)
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model medical_staff {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  position        String?      @db.VarChar(100)
  work_shift      String?      @db.VarChar(100)
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar(255)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  healthcare_provider healthcare_provider[]
  insurance_provider  insurance_provider[]
  medical_staff       medical_staff[]
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String                @unique @db.VarChar(255)
  firstName           String?               @db.VarChar(255)
  lastName            String?               @db.VarChar(255)
  roq_user_id         String                @db.VarChar(255)
  tenant_id           String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  appointment         appointment[]
  healthcare_provider healthcare_provider[]
  insurance_provider  insurance_provider[]
  medical_staff       medical_staff[]
  organization        organization[]
}
